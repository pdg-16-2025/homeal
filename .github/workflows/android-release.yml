name: Android Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.1.0, etc.

permissions:
  contents: write
  actions: read

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./android/gradlew

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Update version in build.gradle.kts
      working-directory: ./android
      run: |
        echo "Updating version to: ${{ steps.get_version.outputs.VERSION }}"
        
        # Update version name
        sed -i "s/versionName = \".*\"/versionName = \"${{ steps.get_version.outputs.VERSION }}\"/" app/build.gradle.kts
        
        # Extract version code from version (e.g., 0.0.1 -> 1, 1.2.3 -> 10203)
        VERSION_CODE=$(echo "${{ steps.get_version.outputs.VERSION }}" | awk -F. '{
          major = $1; minor = $2; patch = $3;
          # Ensure we get a valid positive integer
          code = major * 10000 + minor * 100 + patch;
          if (code == 0) code = 1;
          printf "%d", code
        }')
        
        echo "Generated version code: $VERSION_CODE"
        
        # Update version code
        sed -i "s/versionCode = .*/versionCode = $VERSION_CODE/" app/build.gradle.kts
        
        # Show the updated lines for verification
        echo "Updated build.gradle.kts version info:"
        grep -A 2 -B 2 "versionCode\|versionName" app/build.gradle.kts

    - name: Run tests
      working-directory: ./android
      run: ./gradlew test

    - name: Build release APK
      working-directory: ./android
      run: ./gradlew assembleRelease

    - name: Build debug APK
      working-directory: ./android
      run: ./gradlew assembleDebug

    - name: Get APK file names
      id: apk_names
      run: |
        echo "Finding APK files..."
        find android/app/build/outputs/apk -name '*.apk' -type f
        
        RELEASE_APK=$(find android/app/build/outputs/apk/release -name '*.apk' | head -1)
        DEBUG_APK=$(find android/app/build/outputs/apk/debug -name '*.apk' | head -1)
        
        echo "Release APK: $RELEASE_APK"
        echo "Debug APK: $DEBUG_APK"
        
        echo "RELEASE_APK=$RELEASE_APK" >> $GITHUB_OUTPUT
        echo "DEBUG_APK=$DEBUG_APK" >> $GITHUB_OUTPUT

    - name: Create Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create release notes
        cat << EOF > release_notes.md
        ## Homeal Android App v${{ steps.get_version.outputs.VERSION }}
        
        ### Changes
        - Please update this section with your release notes
        
        ### Downloads
        - **Release APK**: Ready for production use
        - **Debug APK**: For testing and debugging
        
        ### Installation
        1. Download the appropriate APK file
        2. Enable "Install from unknown sources" in your Android settings
        3. Install the APK file
        
        ### Build Information
        - Version Code: $(grep "versionCode" android/app/build.gradle.kts | awk '{print $3}')
        - Built from commit: ${{ github.sha }}
        - Build date: $(date)
        EOF
        
        # Create release and upload assets
        gh release create v${{ steps.get_version.outputs.VERSION }} \
          --title "Homeal v${{ steps.get_version.outputs.VERSION }}" \
          --notes-file release_notes.md \
          "${{ steps.apk_names.outputs.RELEASE_APK }}#homeal-v${{ steps.get_version.outputs.VERSION }}-release.apk" \
          "${{ steps.apk_names.outputs.DEBUG_APK }}#homeal-v${{ steps.get_version.outputs.VERSION }}-debug.apk"
