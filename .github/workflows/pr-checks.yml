name: PR Checks

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'android/**'
      - '.github/workflows/android-*.yml'
      - '.github/workflows/pr-checks.yml'

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: read

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      android: ${{ steps.changes.outputs.android }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check for changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          android:
            - 'android/**'

  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.android == 'true'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./android/gradlew

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Run unit tests
      working-directory: ./android
      run: ./gradlew test --continue

    - name: Run lint
      working-directory: ./android
      run: ./gradlew lint

    - name: Build debug APK
      working-directory: ./android
      run: ./gradlew assembleDebug

    - name: Comment PR with build status
      if: always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const jobStatus = '${{ job.status }}';
          const emoji = jobStatus === 'success' ? '✅' : '❌';
          const message = `${emoji} Android build ${jobStatus === 'success' ? 'passed' : 'failed'} for commit ${context.sha.slice(0, 7)}`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });
